{"version":3,"sources":["constants/variable.js","component/Gobang/style.js","component/Gobang/util.js","component/Gobang/ClickRegion.js","component/Gobang/Buttons.js","component/Gobang/FunctionsBlock.js","component/Gobang/Gobang.js","component/Gobang/useGame.js","reportWebVitals.js","index.js"],"names":["STYLE","white","black","md","LINE","Container","styled","div","Board","Square","Region","SPACER","Block","$content","turn","Header","ScrollDiv","Button","button","Form","form","Copy","input","create2DArray","content","rows","cols","result","row","push","col","figureRowCol","id","length","Math","floor","Number","figureConnection","count","state","start","move","size","max","next","ClickRegion","winner","handleRecordUpdate","handleWinner","handleOnClick","target","some","line","map","win","onClick","Buttons","step","handleReturnOnClick","steps","Array","i","number","className","value","FunctionsBlock","handleRecordInput","handleInput","handleRecordSave","handleRecordCopy","record","onSubmit","name","onChange","placeholder","as","type","readOnly","JSON","stringify","Gobang","localStorageKey","local","parse","localStorage","getItem","useState","setRecord","setStep","setTurn","setWinner","setInput","handleRecordReturn","goal","slice","contents","rowIndex","colIndex","setItem","copy","document","querySelector","focus","select","execCommand","alert","error","event","preventDefault","useGame","SIZE","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5176c516.chunk.js","sourcesContent":["const STYLE = {\n  stone: {\n    white: \"border: 1px solid black; background: white;\",\n    black: \"background: black;\",\n  },\n  color: {\n    white: \"#f2f2f2\",\n  },\n  media: {\n    md: \"@media (max-width: 1119px)\",\n  },\n};\nconst SIZE = 19;\nconst SPACER = 100 / (SIZE + 1);\nconst LOCAL_STORAGE_KEY = \"gobang-history\";\nconst LINE = [\n  [0, 1],\n  [1, 0],\n  [1, -1],\n  [1, 1],\n];\nexport { STYLE, SIZE, SPACER, LOCAL_STORAGE_KEY, LINE };\n","import styled from \"styled-components\";\nimport { STYLE, SPACER } from \"../../constants/variable\";\nconst Container = styled.div`\n  display: flex;\n  height: 100vh;\n  justify-content: space-between;\n  ${STYLE.media.md} {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\nconst Board = styled.div`\n  position: relative;\n  width: 100vmin;\n  height: 100vmin;\n  padding: ${SPACER}vmin;\n  background: ${STYLE.color.white};\n  font-size: 0;\n  line-height: 0;\n`;\nconst Square = styled.div`\n  display: inline-block;\n  border: 1px solid black;\n  width: ${SPACER}vmin;\n  height: ${SPACER}vmin;\n`;\nconst Region = styled(Board)`\n  position: absolute;\n  top: ${SPACER / 2}%;\n  right: ${SPACER / 2}%;\n  width: ${100 - SPACER}%;\n  height: ${100 - SPACER}%;\n  padding: 0;\n  background: transparent;\n`;\nconst Block = styled(Square)`\n  border: none;\n  border-radius: 50%;\n  ${({ $content, turn }) => {\n    if ($content) return STYLE.stone.white;\n    if ($content === false) return STYLE.stone.black;\n    return turn\n      ? \"&:hover{\" + STYLE.stone.white + \"}\"\n      : \"&:hover{\" + STYLE.stone.black + \"}\";\n  }}\n`;\nconst Header = styled.div`\n  flex: 1;\n  width: 100%;\n  display: flex;\n  flex-flow: column nowrap;\n  padding: 5px;\n  & h1,\n  & h2,\n  & h3 {\n    margin: 5px 0;\n  }\n  ${STYLE.media.md} {\n    width: 100vmin;\n    text-align: center;\n  }\n`;\nconst ScrollDiv = styled.div`\n  flex: 1;\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: space-between;\n  overflow: scroll;\n`;\nconst Button = styled.button`\n  display: inline-block;\n  outline: none;\n  border: 1px solid white;\n  transition: all 0.2s ease-in-out;\n  font-size: 20px;\n  margin: 5px 0px;\n  &.white {\n    background: ${STYLE.color.white};\n  }\n  &.white:hover {\n    border: 1px solid black;\n  }\n  &.black {\n    color: ${STYLE.color.white};\n    background: black;\n  }\n  &.black:hover {\n    color: black;\n    background: ${STYLE.color.white};\n  }\n  &.wide {\n    width: 50%;\n  }\n  &.block {\n    width: 100%;\n  }\n`;\nconst Form = styled.form`\n  display: flex;\n  margin: 5px 0;\n  & textarea {\n    width: 50%;\n    border: 1px solid black;\n    outline: none;\n    font-size: 20px;\n  }\n  & input[type=\"submit\"] {\n    border: 1px solid black;\n    height: 100%;\n    margin: 0;\n  }\n  & input[type=\"submit\"]:hover {\n    border: 1px solid ${STYLE.color.white};\n  }\n`;\nconst Copy = styled.input`\n  position: fixed;\n  bottom: 0;\n  right: 0;\n  width: 2em;\n  height: 2em;\n  padding: 0;\n  box-shadow: none;\n  opacity: 0;\n`;\n\nexport {\n  Container,\n  Board,\n  Square,\n  Region,\n  Block,\n  Header,\n  ScrollDiv,\n  Button,\n  Form,\n  Copy,\n};\n","import { LINE } from \"../../constants/variable\";\nexport const create2DArray = (content, rows, cols = rows) => {\n  let result = [];\n  for (let row = 0; row < rows; row++) {\n    result.push([]);\n    for (let col = 0; col < cols; col++) {\n      result[row].push(content === \"id\" ? row * cols + col : content);\n    }\n  }\n  return result;\n};\nexport const figureRowCol = (id, length) => [\n  Math.floor(Number(id) / Number(length)),\n  Number(id) % Number(length),\n];\nconst figureConnection = (count, state, start, move, turn, size, max = 5) => {\n  let next = [start[0] + move[0], start[1] + move[1]];\n  while (\n    count < max &&\n    -1 < next[0] &&\n    next[0] < size &&\n    -1 < next[1] &&\n    next[1] < size\n  ) {\n    if (turn !== state[next[0]][next[1]]) break;\n    count++;\n    next = [next[0] + move[0], next[1] + move[1]];\n  }\n  return count;\n};\nexport const win = (state, row, col, turn, size) => {\n  return LINE.some((line) =>\n    figureConnection(\n      figureConnection(1, state, [row, col], line, turn, size),\n      state,\n      [row, col],\n      line.map((move) => -move),\n      turn\n    ) >= 5\n      ? true\n      : false\n  );\n};\n","import { create2DArray, figureRowCol, win } from \"./util\";\nimport { Region, Block } from \"./style\";\nimport PropTypes from \"prop-types\";\n\nexport default function ClickRegion({\n  winner,\n  size,\n  state,\n  turn,\n  handleRecordUpdate,\n  handleWinner,\n}) {\n  const handleOnClick = ({ target }) => {\n    const [row, col] = figureRowCol(target.id, size);\n    if (state[row][col] !== \"\" || winner) return;\n    if (win(state, row, col, turn, size)) handleWinner(turn);\n    handleRecordUpdate(row, col);\n  };\n  return (\n    <Region>\n      {create2DArray(\"id\", size).map((row) =>\n        row.map((id) => {\n          const [row, col] = figureRowCol(id, size);\n          return (\n            <Block\n              key={id}\n              id={id}\n              $content={state[row][col]}\n              turn={turn}\n              onClick={handleOnClick}\n            />\n          );\n        })\n      )}\n    </Region>\n  );\n}\n\nClickRegion.propTypes = {\n  winner: PropTypes.bool,\n  size: PropTypes.number,\n  state: PropTypes.arrayOf(\n    PropTypes.arrayOf(PropTypes.oneOf([true, false, \"\"]))\n  ),\n  turn: PropTypes.bool,\n  handleRecordUpdate: PropTypes.func,\n  handleWinner: PropTypes.func,\n};\n","import { Button } from \"./style\";\nimport PropTypes from \"prop-types\";\n\nexport default function Buttons({ step, handleReturnOnClick }) {\n  let steps = new Array(step);\n  for (let i = 0; i < step; i++) {\n    steps[i] = i;\n  }\n  return (\n    <div>\n      <h3>回到黑子步數</h3>\n      {steps.map((number) => {\n        if (number === 0 || number % 2 === 1) return \"\";\n        return (\n          <Button\n            key={number}\n            className={\"black\"}\n            value={number}\n            onClick={handleReturnOnClick}\n          >\n            {number}\n          </Button>\n        );\n      })}\n      <h3>回到白子步數</h3>\n      {steps.map((number) => {\n        if (number % 2 === 0) return \"\";\n        return (\n          <Button\n            key={number}\n            className={\"white\"}\n            value={number}\n            onClick={handleReturnOnClick}\n          >\n            {number}\n          </Button>\n        );\n      })}\n    </div>\n  );\n}\n\nButtons.propTypes = {\n  step: PropTypes.number,\n  handleReturnOnClick: PropTypes.func,\n};\n","import { Form, Button, Copy } from \"./style\";\nimport PropTypes from \"prop-types\";\nexport default function FunctionsBlock({\n  handleRecordInput,\n  input,\n  handleInput,\n  handleRecordSave,\n  handleRecordCopy,\n  record,\n  winner,\n  handleReturnOnClick,\n}) {\n  return (\n    <div>\n      <Form onSubmit={handleRecordInput}>\n        <textarea\n          rows=\"1\"\n          name=\"input\"\n          value={input}\n          onChange={handleInput}\n          placeholder=\"貼上複製的棋譜\"\n        />\n        <Button as=\"input\" className=\"black wide\" type=\"submit\" value=\"送出\" />\n      </Form>\n      <Button className=\"white wide\" onClick={handleRecordSave}>\n        儲存棋局\n      </Button>\n      <Button className=\"white wide\" onClick={handleRecordCopy}>\n        複製棋譜\n      </Button>\n      <Copy id=\"copy\" readOnly value={JSON.stringify({ record, winner })} />\n      <Button className=\"black block\" value={0} onClick={handleReturnOnClick}>\n        再來一盤\n      </Button>\n    </div>\n  );\n}\n\nFunctionsBlock.propTypes = {\n  handleRecordInput: PropTypes.func,\n  input: PropTypes.string,\n  handleInput: PropTypes.func,\n  handleRecordSave: PropTypes.func,\n  handleRecordCopy: PropTypes.func,\n  record: PropTypes.arrayOf(\n    PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.oneOf([true, false, \"\"])))\n  ),\n  winner: PropTypes.bool,\n  handleReturnOnClick: PropTypes.func,\n};\n","import { Container, Board, Square, Header, ScrollDiv } from \"./style\";\nimport { SIZE, LOCAL_STORAGE_KEY } from \"../../constants/variable\";\nimport useGame from \"./useGame\";\nimport { create2DArray } from \"./util\";\nimport ClickRegion from \"./ClickRegion\";\nimport Buttons from \"./Buttons\";\nimport FunctionsBlock from \"./FunctionsBlock\";\n\nfunction Gobang() {\n  const {\n    record,\n    step,\n    turn,\n    winner,\n    input,\n    handleRecordUpdate,\n    handleRecordReturn,\n    handleWinner,\n    handleReturnOnClick,\n    handleRecordSave,\n    handleRecordCopy,\n    handleRecordInput,\n    handleInput,\n  } = useGame(LOCAL_STORAGE_KEY, create2DArray, SIZE);\n  return (\n    <Container>\n      <Header>\n        <h1>五子棋</h1>\n        <h2>{winner ? winner + \"贏！\" : \"輸贏尚未分曉\"}</h2>\n        <ScrollDiv>\n          <Buttons step={step} handleReturnOnClick={handleReturnOnClick} />\n          <FunctionsBlock\n            handleRecordInput={handleRecordInput}\n            input={input}\n            handleInput={handleInput}\n            handleRecordSave={handleRecordSave}\n            handleRecordCopy={handleRecordCopy}\n            record={record}\n            winner={winner}\n            handleReturnOnClick={handleReturnOnClick}\n          />\n        </ScrollDiv>\n      </Header>\n      <Board>\n        {create2DArray(\"id\", SIZE - 1).map((row) =>\n          row.map((id) => <Square key={id} />)\n        )}\n        <ClickRegion\n          winner={winner}\n          size={SIZE}\n          state={record[record.length - 1]}\n          turn={turn}\n          handleRecordUpdate={handleRecordUpdate}\n          handleRecordReturn={handleRecordReturn}\n          handleWinner={handleWinner}\n        />\n      </Board>\n    </Container>\n  );\n}\n\nexport default Gobang;\n","import { useState } from \"react\";\n\nexport default function useGame(localStorageKey, create2DArray, size) {\n  const local = JSON.parse(localStorage.getItem(localStorageKey));\n  const [record, setRecord] = useState(\n    local ? local.record : [create2DArray(\"\", size)]\n  );\n  const [step, setStep] = useState(record.length - 1);\n  const [turn, setTurn] = useState(record.length % 2 === 0);\n  const [winner, setWinner] = useState(local ? local.winner : false);\n  const [input, setInput] = useState(\"\");\n  const handleRecordUpdate = (row, col) => {\n    setRecord([\n      ...record,\n      record[record.length - 1].map((contents, rowIndex) => {\n        if (rowIndex !== row) return contents;\n        return contents.map((content, colIndex) => {\n          if (colIndex !== col) return content;\n          return turn;\n        });\n      }),\n    ]);\n    setStep(step + 1);\n    setTurn(!turn);\n  };\n  const handleRecordReturn = (goal) => {\n    setRecord(record.slice(0, goal + 1));\n    setStep(goal);\n    setTurn(goal % 2 === 0 ? false : true);\n    setWinner(false);\n  };\n  const handleWinner = (turn) => setWinner(turn ? \"白子\" : \"黑子\");\n  const handleReturnOnClick = ({ target }) =>\n    handleRecordReturn(Number(target.value));\n  const handleRecordSave = () =>\n    localStorage.setItem(localStorageKey, JSON.stringify({ record, winner }));\n  const handleRecordCopy = () => {\n    const copy = document.querySelector(\"#copy\");\n    copy.focus();\n    copy.select();\n    try {\n      const sucess = document.execCommand(\"copy\");\n      if (!sucess) alert(\"複製不成功\");\n    } catch (error) {\n      alert(\"無法複製\");\n    }\n  };\n  const handleRecordInput = (event) => {\n    const result = JSON.parse(input);\n    setRecord(result.record);\n    setStep(result.record.length - 1);\n    setTurn(record.length % 2 ? true : false);\n    setWinner(result.winner);\n    setInput(\"\");\n    event.preventDefault();\n  };\n  const handleInput = ({ target }) => setInput(target.value);\n  return {\n    record,\n    step,\n    turn,\n    winner,\n    input,\n    handleRecordUpdate,\n    handleRecordReturn,\n    handleWinner,\n    handleReturnOnClick,\n    handleRecordSave,\n    handleRecordCopy,\n    handleRecordInput,\n    handleInput,\n  };\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./component/Gobang\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nreportWebVitals();\n"],"sourceRoot":""}